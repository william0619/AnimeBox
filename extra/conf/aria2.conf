###############################
#
# @see https://aria2.github.io/manual/en/html/aria2c.html
#
###############################

# 参数写入
# dir=/Users/williammo/data
################ RPC ################
# Enable JSON-RPC/XML-RPC server.
enable-rpc=true
# Add Access-Control-Allow-Origin header field with value * to the RPC response.
rpc-allow-origin-all=true
# Listen incoming JSON-RPC/XML-RPC requests on all network interfaces.
rpc-listen-all=false

rpc-listen-port=36800

rpc-secret=123456


################ 文件系统 ################
# 每隔 SEC 秒保存一个控制文件(*.aria2)。
auto-save-interval=10
# 启用磁盘缓存。
disk-cache=64M
# 指定文件分配方法。
file-allocation=none
# 对于小于 SIZE 的文件不进行文件分配。
no-file-allocation-limit=64M
# 每隔 SEC 秒将错误/未完成的下载保存到由 --save-session 选项指定的文件中。
save-session-interval=10

## 进度保存设置 ##

# 从会话文件中读取下载任务
# 参数写入
# input-file=/Users/williammo/.aria2/aria2.session
# 会话文件保存路径
# Aria2 退出时或指定的时间间隔会保存`错误/未完成`的下载任务到会话文件
# 参数写入
# save-session=/Users/williammo/.aria2/aria2.session
# 强制保存，即使任务已完成也保存信息到会话文件, 默认:false
# 开启后会在任务完成后保留 .aria2 文件，文件被移除且任务存在的情况下重启后会重新下载。
# 关闭后已完成的任务列表会在重启后清空。
force-save=false


################ 任务 ################
# 在计算并发活动下载时排除仅做种的下载。
bt-detach-seed-only=true
# 使用 --ca-certificate 选项指定的证书验证对等方。
check-certificate=false
# 如果 aria2 从远程 HTTP/FTP 服务器接收到 "文件未找到" 状态 NUM 次而没有获取到一个字节，则强制下载失败。
max-file-not-found=10
# 设置重试次数。
max-tries=0
# 设置重试之间的等待秒数。当 SEC > 0 时，aria2 在 HTTP 服务器返回 503 响应时将重试下载。
retry-wait=10
# 设置连接超时秒数以建立与 HTTP/FTP/代理服务器的连接。连接建立后，此选项无效，使用 --timeout 选项。
connect-timeout=10
# 设置超时秒数。
timeout=10
# aria2 不会拆分小于 2*SIZE 字节的范围。
min-split-size=1M
# 发送 Accept: deflate, gzip 请求头。
http-accept-gzip=true
# 从远程 HTTP/FTP 服务器检索远程文件的时间戳，如果可用，将其应用于本地文件。
remote-time=true
# 设置输出下载进度摘要的间隔秒数。设置为 0 则抑制输出。
summary-interval=0
# 将 Content-Disposition 头中的引号字符串处理为 UTF-8 而不是 ISO-8859-1，例如文件名参数，但不包括扩展版本的文件名*。
content-disposition-default-utf8=true

################ BT 任务 ################
# 启用本地对等发现。
bt-enable-lpd=true
# 需要使用 arc4 的 BitTorrent 消息负载加密。
# bt-force-encryption=true
# 如果给定 true，在使用 --check-integrity 选项进行哈希检查后文件完整，则继续做种文件。
bt-hash-check-seed=true
# 指定每个种子的最大对等数。
bt-max-peers=128
# 尝试优先下载每个文件的第一个和最后一个片段。这对于预览文件很有用。
bt-prioritize-piece=head
# 在 BitTorrent 中下载完成后删除未选择的文件。
bt-remove-unselected-file=true
# 在不验证片段哈希的情况下做种先前下载的文件。
bt-seed-unverified=false
# 设置连接超时秒数以建立与跟踪器的连接。连接建立后，此选项无效，使用 --bt-tracker-timeout 选项。
bt-tracker-connect-timeout=10
# 设置超时秒数。
bt-tracker-timeout=10
# 设置主机和端口作为 IPv4 DHT 网络的入口点。
# 设置主机和端口作为 IPv6 DHT 网络的入口点。
# vm4.transmissionbt.com:6881
# dht.transmissionbt.com:6881
# dht-entry-point=dht.transmissionbt.com:6881
dht-entry-point=dht.aelitis.com:6881
# dht-entry-point6=dht.transmissionbt.com:6881
dht-entry-point6=dht.aelitis.com:6881


# 启用 IPv4 DHT 功能。它还启用 UDP 跟踪器支持。
enable-dht=true
# 启用 IPv6 DHT 功能。
enable-dht6=true
# 启用对等交换扩展。
enable-peer-exchange=true
# 指定在对等扩展握手期间使用的字符串作为对等客户端版本。
peer-agent=Transmission/3.00
# 指定对等 ID 的前缀。
peer-id-prefix=-TR3000-


## BitTorrent trackers ##
################ BT 任务 ################
# 参数写入
bt-tracker=udp://93.158.213.92:1337/announce,udp://23.168.232.9:1337/announce,udp://185.243.218.213:80/announce,udp://89.234.156.205:451/announce,udp://23.157.120.14:6969/announce,udp://208.83.20.20:6969/announce,udp://109.201.134.183:80/announce,udp://45.9.60.30:6969/announce,udp://54.39.48.3:6969/announce,udp://60.249.37.20:80/announce,udp://135.125.202.143:6969/announce,udp://83.146.104.30:6969/announce,udp://89.110.76.229:6969/announce,udp://18.191.163.220:6969/announce,udp://45.154.96.35:6969/announce,udp://35.227.59.57:6969/announce,udp://209.141.59.25:6969/announce,udp://108.53.194.223:6969/announce,udp://5.255.124.190:6969/announce,udp://tracker.opentrackr.org:1337/announce,udp://open.demonii.com:1337/announce,udp://open.tracker.cl:1337/announce,udp://open.stealth.si:80/announce,udp://tracker.torrent.eu.org:451/announce,udp://explodie.org:6969/announce,udp://exodus.desync.com:6969/announce,udp://tracker.ololosh.space:6969/announce,udp://tracker.bittor.pw:1337/announce,udp://tracker-udp.gbitt.info:80/announce,udp://opentracker.io:6969/announce,udp://open.free-tracker.ga:6969/announce,udp://ns-1.x-fins.com:6969/announce,udp://leet-tracker.moe:1337/announce,udp://isk.richardsw.club:6969/announce,udp://discord.heihachi.pw:6969/announce
# 启用本地对等发现。
# 指定每个种子的最大对等数。

# BT 监听端口(TCP), 默认:6881-6999
# 直通外网的设备，比如 VPS ，务必配置防火墙和安全组策略允许此端口入站
# 内网环境的设备，比如 NAS ，除了防火墙设置，还需在路由器设置外网端口转发到此端口
listen-port=6881-6999

# DHT 网络与 UDP tracker 监听端口(UDP), 默认:6881-6999
# 因协议不同，可以与 BT 监听端口使用相同的端口，方便配置防火墙和端口转发策略。
dht-listen-port=6881-6999

# async-dns=true

# async-dns-server=8.8.8.8